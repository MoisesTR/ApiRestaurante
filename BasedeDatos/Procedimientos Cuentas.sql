USE ATOMIC_RESTAURANTE
GO
SELECT IdClasCuenta,NombClasC,DescClasC,Habilitado,CreatedAt, UpdatedAt FROM CONTABILIDAD_CLASE_CUENTA

SELECT IdGrupo, G.IdClasCuenta,C.NombClasC,NombGrupo, G.Habilitado, G.CreatedAt, G.UpdatedAt 
FROM CONTABILIDAD_GRUPO_CUENTA AS G
INNER JOIN CONTABILIDAD_CLASE_CUENTA AS C
	ON G.IdClasCuenta = C.IdClasCuenta


GO
IF OBJECT_ID('USP_CREATE_CLASE_CUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_CREATE_CLASE_CUENTA;
GO
--Procedimiento creacion de una clase de cuenta
CREATE PROCEDURE USP_CREATE_CLASE_CUENTA (
	@IdClasCuenta		TINYINT	OUT,
	@NombClasC			NVARCHAR(100),
	@DescClasC			NVARCHAR(150)
)
AS BEGIN
	IF NOT EXISTS( SELECT * FROM dbo.CONTABILIDAD_CLASE_CUENTA WHERE NombClasC = @NombClasC )
	BEGIN 
		DECLARE @MAX_CUENTA TINYINT
		SELECT @MAX_CUENTA = (ISNULL(COUNT(*),0) + 1) FROM dbo.CONTABILIDAD_CLASE_CUENTA

		INSERT INTO CONTABILIDAD_CLASE_CUENTA(IdClasCuenta, NombClasC, DescClasC)
		VALUES(@MAX_CUENTA, @NombClasC, @DescClasC)
		SET @IdClasCuenta = @MAX_CUENTA;
	END
	ELSE BEGIN
		RAISERROR('Ya existe una Clase de Cuenta con ese nombre.',16,1)
	END
END
GO
IF OBJECT_ID('USP_UPDATE_CLASE_CUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_UPDATE_CLASE_CUENTA;
GO
--Procedimiento creacion de una clase de cuenta
CREATE PROCEDURE USP_UPDATE_CLASE_CUENTA (
	@IdClasCuenta		TINYINT,
	@NombClasC			NVARCHAR(100),
	@DescClasC			NVARCHAR(150)
)
AS BEGIN	
	UPDATE CONTABILIDAD_CLASE_CUENTA SET NombClasC = @NombClasC, DescClasC = @DescClasC, UpdatedAt = GETDATE()
	WHERE IdClasCuenta = @IdClasCuenta
END
GO
--// Procedimiento creacion de un grupo de cuenta
IF OBJECT_ID('USP_CREATE_GRUPO_CUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_CREATE_GRUPO_CUENTA;
GO
CREATE PROCEDURE USP_CREATE_GRUPO_CUENTA (
	@IdClasCuenta		TINYINT,
	@NombGrupo			NVARCHAR(100),
	@IdGrupo			TINYINT	OUT
)
AS BEGIN
	IF NOT EXISTS( SELECT * FROM dbo.CONTABILIDAD_GRUPO_CUENTA WHERE NombGrupo = @NombGrupo AND IdClasCuenta = @IdClasCuenta )
	BEGIN 
		DECLARE @MAX_GRUPO TINYINT
		SELECT @MAX_GRUPO = (ISNULL(COUNT(*),0)+1) FROM dbo.CONTABILIDAD_GRUPO_CUENTA WHERE IdClasCuenta = @IdClasCuenta;

		INSERT INTO	CONTABILIDAD_GRUPO_CUENTA(IdGrupo,IdClasCuenta, NombGrupo)
		VALUES(@MAX_GRUPO, @IdClasCuenta, @NombGrupo)
		SET @IdGrupo = @MAX_GRUPO;
	END
	ELSE BEGIN
		RAISERROR('Ya existe una Grupo de Cuenta con ese nombre.',16,1)
	END
END
GO
IF OBJECT_ID('USP_UPDATE_GRUPO_CUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_UPDATE_GRUPO_CUENTA;
GO
CREATE PROCEDURE USP_UPDATE_GRUPO_CUENTA (
	@IdClasCuenta		TINYINT,
	@IdGrupo			TINYINT,
	@NombGrupo			NVARCHAR(100)
)
AS BEGIN

	UPDATE CONTABILIDAD_GRUPO_CUENTA SET NombGrupo = @NombGrupo
	WHERE IdGrupo = @IdGrupo AND IdClasCuenta = @IdClasCuenta
END
GO
IF OBJECT_ID('USP_CREATE_CUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_CREATE_CUENTA;
GO
CREATE PROCEDURE USP_CREATE_CUENTA (
	@IdClasCuenta		TINYINT,
	@IdGrupo			TINYINT,
	--@IdRestaurante		INT,
	@IdMoneda			TINYINT,
	@NombCuenta			NVARCHAR(50),
	@DescCuenta			NVARCHAR(150),
	@NumCuenta			NVARCHAR(4)	OUT
)
AS BEGIN
	DECLARE @CANT_CUENTAS TINYINT
	SELECT @CANT_CUENTAS = COUNT(*) FROM dbo.CONTABILIDAD_CUENTA WHERE IdClasCuenta = @IdClasCuenta AND IdGrupo =@IdGrupo
	IF ( @CANT_CUENTAS < 99 ) BEGIN
		DECLARE @NUM_CUENTA NVARCHAR(4);

	SET @NUM_CUENTA = CAST( @IdClasCuenta AS VARCHAR) + CAST( @IdGrupo AS VARCHAR) + RIGHT('00' + CAST((@CANT_CUENTAS + 1) AS VARCHAR),2)
		INSERT INTO CONTABILIDAD_CUENTA(IdClasCuenta, IdGrupo, IdMoneda, NumCuenta, NombCuenta, DescCuenta)
		VALUES(@IdClasCuenta, @IdGrupo, @IdMoneda, @NUM_CUENTA, @NombCuenta, @DescCuenta);
	
		SET @NumCuenta = @NUM_CUENTA
	END
	ELSE BEGIN
		RAISERROR('Ya superaste el maximo de cuentas permitido.',16,1)
	END
END
GO
IF OBJECT_ID('USP_UPDATE_CONTABILIDAD_CUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_UPDATE_CONTABILIDAD_CUENTA;
GO
CREATE PROCEDURE USP_UPDATE_CONTABILIDAD_CUENTA (
	--@IdRestaurante	INT,
	@NumCuenta		NVARCHAR(4),
	@NombCuenta		NVARCHAR(100),
	@DescCuenta		NVARCHAR(150)
)
AS BEGIN
	UPDATE CONTABILIDAD_CUENTA SET NombCuenta = @NombCuenta, DescCuenta = @DescCuenta, UpdatedAt = GETDATE()
	WHERE NumCuenta = @NumCuenta 
END

GO
CREATE PROCEDURE USP_CREATE_SUBCUENTA (
	@NumCuenta				NVARCHAR(4),
	@NombSubCuenta			NVARCHAR(100),
	@DescSubCuenta			NVARCHAR(150),
	@NumSubCuenta			NVARCHAR(6)	OUT
)
AS BEGIN
	DECLARE @CANT_SUBCUENTAS TINYINT
	SELECT @CANT_SUBCUENTAS = COUNT(*) FROM dbo.CONTABILIDAD_SUBCUENTA WHERE NumCuenta = @NumCuenta;
	IF ( @CANT_SUBCUENTAS < 99 ) BEGIN
		DECLARE @NUM_SUBCUENTA NVARCHAR(4);

		SET @NUM_SUBCUENTA = @NumCuenta + RIGHT('00' + CAST((@CANT_SUBCUENTAS + 1) AS VARCHAR),2)
		INSERT INTO CONTABILIDAD_SUBCUENTA(NumSubCuenta, NumCuenta, NombSubCuenta, DescSubCuenta)
		VALUES(@NUM_SUBCUENTA, @NumCuenta, @NombSubCuenta, @DescSubCuenta);
	
		SET @NumCuenta = @NUM_SUBCUENTA
	END
	ELSE BEGIN
		RAISERROR('Ya superaste el maximo de SubCuentas permitido.',16,1)
	END
END
GO
IF OBJECT_ID('USP_UPDATE_CONTABILIDAD_SUBCUENTA','P') IS NOT NULL
	DROP PROCEDURE USP_UPDATE_CONTABILIDAD_SUBCUENTA;
GO
CREATE PROCEDURE USP_UPDATE_CONTABILIDAD_SUBCUENTA (
	@NumSubCuenta		NVARCHAR(6),
	@NombSubCuenta		NVARCHAR(100),
	@DescSubCuenta		NVARCHAR(150)
)
AS BEGIN
	UPDATE CONTABILIDAD_SUBCUENTA SET NombSubCuenta = @NombSubCuenta, DescSubCuenta = @DescSubCuenta, UpdatedAt = GETDATE()
	WHERE NumSubCuenta = @NumSubCuenta
END